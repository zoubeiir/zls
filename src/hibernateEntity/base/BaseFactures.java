package hibernateEntity.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the Factures table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="Factures"
 */
public abstract class BaseFactures  implements Serializable {

	public static String PROP_FRAIS = "Frais";
	public static String PROP_I_D_FACTURE = "IDFacture";
	public static String PROP_ANNEE = "Annee";
	public static String PROP_MOIS = "Mois";
	public static String PROP_ID = "Id";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.Integer _id;

	// fields
	private java.lang.Float _frais;
	private java.lang.String _iDFacture;
	private java.lang.Integer _annee;
	private java.lang.Integer _mois;


	// constructors
	public BaseFactures () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseFactures (java.lang.Integer _id) {
		this.setId(_id);
		initialize();
	}

	/**
	 * Constructor for required fields
	 */
	public BaseFactures (
		java.lang.Integer _id,
		java.lang.String _iDFacture,
		java.lang.Integer _annee,
		java.lang.Integer _mois) {

		this.setId(_id);
		this.setIDFacture(_iDFacture);
		this.setAnnee(_annee);
		this.setMois(_mois);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="increment"
     *  column="ID"
     */
	public java.lang.Integer getId () {
		return _id;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _id the new ID
	 */
	public void setId (java.lang.Integer _id) {
		this._id = _id;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: Frais
	 */
	public java.lang.Float getFrais () {
		return _frais;
	}

	/**
	 * Set the value related to the column: Frais
	 * @param _frais the Frais value
	 */
	public void setFrais (java.lang.Float _frais) {
		this._frais = _frais;
	}


	/**
	 * Return the value associated with the column: IDFacture
	 */
	public java.lang.String getIDFacture () {
		return _iDFacture;
	}

	/**
	 * Set the value related to the column: IDFacture
	 * @param _iDFacture the IDFacture value
	 */
	public void setIDFacture (java.lang.String _iDFacture) {
		this._iDFacture = _iDFacture;
	}


	/**
	 * Return the value associated with the column: annee
	 */
	public java.lang.Integer getAnnee () {
		return _annee;
	}

	/**
	 * Set the value related to the column: annee
	 * @param _annee the annee value
	 */
	public void setAnnee (java.lang.Integer _annee) {
		this._annee = _annee;
	}


	/**
	 * Return the value associated with the column: mois
	 */
	public java.lang.Integer getMois () {
		return _mois;
	}

	/**
	 * Set the value related to the column: mois
	 * @param _mois the mois value
	 */
	public void setMois (java.lang.Integer _mois) {
		this._mois = _mois;
	}


	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof hibernateEntity.base.BaseFactures)) return false;
		else {
			hibernateEntity.base.BaseFactures mObj = (hibernateEntity.base.BaseFactures) obj;
			if (null == this.getId() || null == mObj.getId()) return false;
			else return (this.getId().equals(mObj.getId()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getId()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getId().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}