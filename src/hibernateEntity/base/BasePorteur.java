package hibernateEntity.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the porteur table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="porteur"
 */
public abstract class BasePorteur  implements Serializable {

	public static String PROP_LIGNE = "Ligne";
	public static String PROP_ID = "Id";
	public static String PROP_NOM = "Nom";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.String _ligne;

	// fields
	private java.lang.Integer _id;
	private java.lang.String _nom;

	// collections
	private java.util.Set _ligneSet;


	// constructors
	public BasePorteur () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BasePorteur (java.lang.String _ligne) {
		this.setLigne(_ligne);
		initialize();
	}

	/**
	 * Constructor for required fields
	 */
	public BasePorteur (
		java.lang.String _ligne,
		java.lang.Integer _id,
		java.lang.String _nom) {

		this.setLigne(_ligne);
		this.setId(_id);
		this.setNom(_nom);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="increment"
     *  column="ligne"
     */
	public java.lang.String getLigne () {
		return _ligne;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _ligne the new ID
	 */
	public void setLigne (java.lang.String _ligne) {
		this._ligne = _ligne;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: ID
	 */
	public java.lang.Integer getId () {
		return _id;
	}

	/**
	 * Set the value related to the column: ID
	 * @param _id the ID value
	 */
	public void setId (java.lang.Integer _id) {
		this._id = _id;
	}


	/**
	 * Return the value associated with the column: nom
	 */
	public java.lang.String getNom () {
		return _nom;
	}

	/**
	 * Set the value related to the column: nom
	 * @param _nom the nom value
	 */
	public void setNom (java.lang.String _nom) {
		this._nom = _nom;
	}


	/**
	 * Return the value associated with the column: LigneSet
	 */
	public java.util.Set getLigneSet () {
		return this._ligneSet;
	}

	/**
	 * Set the value related to the column: LigneSet
	 * @param _ligneSet the LigneSet value
	 */
	public void setLigneSet (java.util.Set _ligneSet) {
		this._ligneSet = _ligneSet;
	}
	
	public void addToLigneSet (Object obj) {
		if (null == this._ligneSet) this._ligneSet = new java.util.HashSet();
		this._ligneSet.add(obj);
	}



	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof hibernateEntity.base.BasePorteur)) return false;
		else {
			hibernateEntity.base.BasePorteur mObj = (hibernateEntity.base.BasePorteur) obj;
			if (null == this.getLigne() || null == mObj.getLigne()) return false;
			else return (this.getLigne().equals(mObj.getLigne()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getLigne()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getLigne().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}