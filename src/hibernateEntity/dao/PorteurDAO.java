package hibernateEntity.dao;

import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.criterion.Restrictions;

import com.util.HibernateUtil;

import hibernateEntity.Ligne;
import hibernateEntity.Porteur;
import hibernateEntity.base.BaseLigne;
import hibernateEntity.base.BasePorteur;
import hibernateEntity.base.BasePorteurDAO;

/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is the object class that relates to the porteur table.
 * Any customizations belong here.
 */
public class PorteurDAO extends BasePorteurDAO {
	
	
	private SessionFactory sessionFactory = HibernateUtil.getSessionFactory();
	
	public Porteur findByNumero(String numeroLigne){
			
			try {
				if(!this.sessionFactory.getCurrentSession().getTransaction().isActive()){
					Transaction transaction = this.sessionFactory.getCurrentSession().getTransaction();
					Transaction tx =this.sessionFactory.getCurrentSession().beginTransaction();}
				
					Porteur porteur = (Porteur) this.sessionFactory.getCurrentSession().createCriteria(BasePorteur.class).add(Restrictions.eq(Porteur.PROP_LIGNE, numeroLigne)).uniqueResult();
					
							this.sessionFactory.getCurrentSession().close();
					return  porteur;
					
					
					
		
			}catch (Exception e){
				System.out.println(e);
				return null;
			}
				
		
		}
	
	
	
	
	
}